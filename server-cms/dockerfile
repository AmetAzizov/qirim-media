# Creating multi-stage build for production
FROM node:16.20.2-alpine as build
RUN apk update && apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev vips-dev git > /dev/null 2>&1
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

# Устанавливаем переменные среды
ENV NODE_ENV=production

# Устанавливаем рабочую директорию
WORKDIR /opt/app

# Копируем файлы зависимостей
COPY package.json package-lock.json ./

# Устанавливаем зависимости
RUN npm install --only=production

# Копируем исходный код
COPY . .

# Запускаем сборку
RUN npm run build

# Creating final production image
FROM node:16.20.2-alpine
RUN apk add --no-cache vips-dev
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}
WORKDIR /opt/
COPY --from=build /opt/node_modules ./node_modules
WORKDIR /opt/app
COPY --from=build /opt/app ./
ENV PATH /opt/node_modules/.bin:$PATH

# Устанавливаем рабочую директорию
WORKDIR /opt/app

# Копируем сборку и зависимости из предыдущего шага
COPY --from=build /opt/app ./

# Указываем, какой пользователь будет использоваться
USER node

# Указываем порт
EXPOSE 1337

# Запускаем приложение
CMD ["npm", "run", "start"]
